//public 은 접근지정자
	public static String 어벤져스호출() {
		String 영웅이름 = "토르";
		return 영웅이름;
	}//리턴 두가지의 방법 변수 로 호출 , 바로 리턴 호출
	
		//java는 main 함수부터 실행
	public static void main(String[] args) {
		String 호출한영웅이름 =어벤져스호출();                      //어벤져스() 함수 호출
		System.out.println(호출한영웅이름);

	}

    //public 은 접근지정자
	public static String 어벤져스호출(String 영웅이름) {            //()안에 있는 함수도 퍼블릭 중가로 까지만 실행
		String 영웅이름_최종 = "토르";
		return 영웅이름_최종;
	}//리턴 두가지의 방법 변수 로 호출 , 바로 리턴 호출
	
		//java는 main 함수부터 실행
	public static void main(String[] args) {
		String 파라미터값 = "헐크";
		String 호출한영웅이름 =어벤져스호출(파라미터값);              //어벤져스() 함수 호출
		System.out.println(호출한영웅이름);

    //public 은 접근지정자
	public static int 성적계산(int 국어점수,int 수학점수) {
				int sum = 국어점수 + 수학점수;
				return sum;
     }                                                              //리턴 두가지의 방법 변수 로 호출 , 바로 리턴 호출
	
		//java는 main 함수부터 실행
	public static void main(String[] args) {
		int 수학점수 = 100;
		int 국어점수 = 0;
		int 총합은 = 성적계산(국어점수, 수학점수);     
		System.out.println(총합은);
	} 
    문제예시 (max의 값만큼 숫자를 합하라)
    public static int getSum(int max) {
		int sum =0;
		for(int i=1; i<=max; ++i) {          
			sum += i;                          //max의값만큼 숫자를더함
		}
		return sum;
	}	
	public static void main(String[] args) {
		int result = getSum(10);                //int max에 10의숫자를 넣줌
		System.out.println(result);             //1~10까지의 숫자를 합

	}
    ex)예시
    public static int getSum(int max) {
		int sum =0;
		for(int i=1; i<=max; ++i) {          
			sum += i;                            //sum = sum+i
            for(sum == 30) {
                return sum;                      //이곳에서 return를종료
            }                        
		}
		return sum;                              //무시

    ex)예시2
    public static int getSum(int max) {
		int sum =0;
		for(int i=1; i<=max; ++i) {          
			sum += i;
            for(sum == 30) {
                break;               
            }                        
		}
        sum = 50;                                //sum의 핪을30에서 멈추고 sum값 50대입
		return sum;                              //sum을 리턴
-> break는 for문 까지만 return을쓰면 그값이 return {}에서 끝남.

    //재사용성과 코드간결증가 (함수를 만들어놔 값을느면 그떄마다 사용가능.)
    public static void 순대국밥(int 순대, int 내장,String 손님이름){
		System.out.println("순대양 : " 순대 +"내장양 : "+ 내장 +"손님이름 : "+ 손님이름);
	}
	public static void main(String[] args) {
			순대국밥(10,8,"길동")                  //순대양 : 10 내장양 : 8 손님이름 : 길동 출력
			순대국밥(30,15,"철수")                 //순대양 : 30 내장양 : 15 손님이름 : 철수 출력
		}

	    //1부터 100까지 짝수 개수 구하기
		//조건 1 starNum이 endNum보다 크면 return 0
	    //조건 2 endNum이 100을 초과하면 return 0
	public static int getConunt(int starNum, int endNum) {
			//필터링이 먼저
			int count = 0;                         //변수 count지정
			if(starNum >= endNum) {                //변수starNum 가 endNum 크거나 같으면 0을 리턴
				return 0;
			}if(endNum > 100) {                    //endNum가 100초과이면 0을 리턴
				return 0;
			}
			for(int i=starNum; i<=endNum;++i) {    //스타트 넘버가i i가 엔드넘보다 작거나같을때 실행 조건에맞을떄까지 1을더함				                                   
				if(i%2 ==0) {                      //i에 2를 나눈것이 0인 숫자이면 ++count
					++count;                       
				}
			}
			return count;                          //count를 리턴
		}
		public static void main(String[] args) {
			int 짝수 = getConunt(1,100);            //getCount를 변수 짝수로 지정 ()의 인자값을 작성
			System.out.println(짝수);               //출력 50 (1~100)까지의 짝수의 개수
		} 
		
		배열받는법
		public static void main(String[] args){
			int array[] = { 10,5,3,4};
			int y = 배열받아보자(array);
			System.out.println(y);                   //밑의 x의 array[0]값인 10을출력
		}
		public static이 int 배열받아보자(int[] array){
			int x = array[0];
			return x;
		}
-------------------------------문제-----------------------------------------
		//1. 메소드를 활용해서 짝수 출력( 1 ~ 10 )
	//조건. 인자값 하고 리턴값이 없음.
	//public static void 짝수판단(){
		//...코드작성...
	//}
	public static void 짝수판단() {  //void는 바로바로 프린트 출력가능
		for(int i=0; i<=10; ++i) {
		if(i% 2 == 0 ) {			
			System.out.println(i);
		}
	}
 }
    	
	//2.메소드를 활용해서 최대값 구하기.
	//조건. 인덱스 값이 50이 넘으면 최대값 비교를 하지 않습니다.
	//조건. 배열길이가 5를 넘으면 return 0을 합니다. 
	//public static int 최대값구하기(int[] array){
		//int max = 0;
		//...코드 작성...
		//return max;
	//}
    public static int 최대값구하기(int[] array) {  //배열의 값을 인자값으로 정함
    	if(array.length > 5) {                   //조건문은 가장먼저
    		return 0;                            //배열의 길이가 5를넘으면 0을리턴
    	}
    	int max = 0;                             //int max 변수를 지정
    	for(int i = 0;i < array.length; ++i) {   //배열의 길이만큼 ++i
    		if(array[i] < 50) {                  //배열안의 숫자가 50보다크면 무시
    			if(max < array[i]) {             //가장큰 배열의 숫자를 픽
    				max = array[i];				 //max는 배열의 가장큰 숫자
    			}    	
        	}
    }
    	return max;
    	
    }

	//3. 메소드를 활용해서 거스름돈 풀기.
	//조건. 파라미터값에 만원을 입력하면 만원 몇장
	 	//오천원을 입력하면 오천원 몇장을 출력.
		//만원,오천원외 단어가 오면 0을 return 하시오
	//public static int 최대값구하기(String money, int totalMoney){
		//int MAN = 10000;
		//int OCHEON = 5000;
		//if(money.equals("만원")) ... 코드 작성 ...
		//if(money.equals("오천원")) ... 코드 작성 ...
	//}
    public static int 거스름돈구하기(String money, int totalMoney){
    	int MAN = 10000;                    //변수 MAN 10000
    	int OCHEON = 5000;                  //변수 OCHEON 5000
    	
    	if(money.equals("만원")) {          //equals는 (==와같은으미)
    		int manwon = totalMoney / 10000;//변수 manwon은 totalMoney / 10000
    		return manwon;                  // mawon의 값을 리턴
    	}
    	if(money.equals("오천원")) {             //"오천원"일 경우
    		int oocheonwon = totalMoney / 5000; //변수 ocheonwon 은 totalMoney / 5000
    		return ocheonwon;                   //ocheonwon을 리턴
    	}else {                                 //둘다아닐경우 
    		return 0;                           //0을리턴 ("만원","오천원"이 아닌경우"
    	}
    	
    }
	
	//메인함수
    public static void main(String[] args) {   	
    	짝수판단();                             //인자값이 없기떄문에 ()의 숫자를 넣지않고 위의 짝수판단()for문에따라 0~10의 짝수출력
    	int array[] = {11,21,31,41};
    	int max = 최대값구하기(array);
    	System.out.println("가장큰값 : " + max);
    	int temp =거스름돈구하기("만원", 50000);
    	System.out.println(temp+"장 ");
	}
---------------------------------문자메소드-----------------------------------
public class 문자메소드 {

	public static void main(String[] args) {
		String name = "ABCD";
		String 소문자 = "abcd";

		//대문자->소문자
		String result = "";
		result = name.toLowerCase();                                  //toLowerCase 대문자를->소문자로
		System.out.println(result);

		//소문자 ->대문자
		result = 소문자.toUpperCase();                                 //toUpperCase 소문자를 -> 대문자로
		System.out.println(result);

		//***** 띄어쓰기를 없애줌.
		String id = " 홍길동";
		result = id.trim();
		System.out.println(result);

		//***** 중복되는 특수문자 로 나눠줌.
		String phone = "010-1234-1234";
		String array[] = phone.split("-");                              // -를 기준으로 나눠줌
		System.out.println(array[2]); //뒤쪽1234출력

		//글자수 ,글자수제한
		String 닉네임 = "Zi존도적xx";	
		int len = 닉네임.length();
		if(len >= 5) {
			System.out.println("닉네임은 4글자 이하로만 작성 가능합니다.");
		}		
		System.out.println(len);

		//****사용불가능한 문자 없애기
		String password = "123@";
		result = password.replace("@", "");                               //replace(바꾸고싶은 문자,바꾸자하는문자)
		System.out.println(result);

		//**** 안쪽에있는 띄어쓰기 없애기
		String password2 = "123 123 123";
		result = password2.replace(" ", "");                             //공백을 없개대체
		System.out.println(result);                                      //123123123출력

	}

}
---------------------------------------------문자메소드문제---------------------------------------------
public class 클레스스터디 {
	//1. 메소드 생성
	//public static String getResult(String id){
		//...코드 작성...
		//조건 1. 아이디 길이가 10이하, 2이상
		//조건 2. 아이디를 대문자에서 소문자로 변경.
		//조건 3. 아이디에 '!'가 들어가면 안됨.
		//조건 4. 아이디에 문자 공백이 들어가면 안됨.

		//return 문자열;
	//}
	public static String getResult(String id){
		String 아이디 = id;               //변수 아이디에 id지정
		int len = id.length();            //id의 길이조정
		if(len <2 || len > 10) }          //길이가2이상 10이하
			return "아이디는 2글자이상 10글자이로만 작성 가능합니다.";
		}                                 //길이가 2이상 10이하시 리턴출력
		아이디 = 아이디.toLowerCase();     //아이디 소문자화       변수아이디로 밑의 수정사항을 전부 저장(그대로 가지고옴) 첫아이디는 id그대로
		아이디 = 아이디.replace(" ", "");  //아이디 공백제거
		아이디 = 아이디.replace("!", "");  //아이디 !표 제거
		return 아이디;                     //아이디를 리턴
	}
	
	 // 2. 메인 메소드에서 getResult 호출
	  public static void main(String[] args) { 
	  String userID = "J a!va!";           //유저 아이디 "K a!va!"
	  String id = getResult(userID);       //위의 메소드를 유저아이디에 대입
	  System.out.println(id);              //java출력!
    }
			

}
---------------------------------------------문자메소드문제---------------------------------------------
//1. 조건이 들어간 최대 값 구하기
	public static int getResult(String word) {
		//1.콤마로 배열생성
		//2.느낌표 제거할 것
	  	//3.문자를 숫자로 변환 ex)int x = Integer.parseInt(String x)
		//4.1000 미만 숫자 중 가장 큰 수 구하기
		//최종 결과값에서 곱하기 2
		String array[] = word.split(",");             //String array[] 를 에대입 word.split(","); (word.split이 문자 배열을뜯함)
		int max = 0;                                  //변수 max지정
		for(int i = 0; i < array.length; ++i) {			
			word = array[i].replace("!", "");         //word = array[i] 에 대입하고 replace로 !를 제거
			int x = Integer.parseInt(word);           //Integer.parseInt(문자)는 문자를 숫자로 대입시켜줌 변수x에 word(array[i])를 대입
			if(x < 1000) {                            //x(array[i])가 1000 미만일경우 (1000초과 숫자제외)
				if(max < x ){                         //max 가 x보다작으면
					max = x;                          //max 를 x에대입 (가장큰수)
				}
			}
			
		}
    
		max = max*2;                                 //max를 두배
		return max;                                  //max를 리턴
	}
		
        public static void main(String[] args) {
		String word = "101,1,10,1000,!100!,2000";   //스트링 word 배열을 지정 
		int id = getResult(word);                   //변수id에 getResult식을 위의String word
		System.out.println(id);                     //id 를출력 1000을제외한 숫자 101에*2하여 202출력
	}