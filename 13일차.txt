<접근지정자><리턴타입><메소드타입><인자값(파라미터)>
public      9데이터타입 동사(명사x) (9데이터 타입)
private     void
protected   (int,float,double,String...)
default

DB와 연동시
1)예시
select                 //리턴타입
 ename
from emp
where empno= <번호>    //where 의값이 인자값

*****메소드 오버로딩(overloading):
목적:이름이 같은 여러개의 메소드를 중복 선언하여 사용의 편리성을 제공

조건:1.이름이 동일해야함.
     2.인자의 개수가 달라야 함. //(int x, int y) -- (int x, int y,int z)
     3.인자의 타입이 달라야 함. //(int x, int y) -- (int x, String y)
     4.동일한 클래스 파일 안에 있어야 함. 

결론: 메소드는 파라미터가 중요함.

클래스 ?
 자바는 <객체 지향 언어>
 객체란 고유한 특성을 가짐. - 객체들이 모여서 하나의 프로그림이 탄생
 객체 = object = class
 컴퓨터= 마우스(객체) ,키보드(객체) ,본체(객체)
 마우스(객체) = 마우스왼쪽클릭() 마우스오른쪽클릭() 휠내리기()
 기능들을 모아논게 객체
 
 ####객체 지향 언어 특징(면접 필
       1. 캡슐화
       - 내부를 마치 캡슐처럼 보호
       2. 상속
       - 클래스를 부모와 자식으로 두고 부모의 기능을 물려받음
       3. 다형성
       - 같은 이름의 메소드가 다르게 구혐(메소드 *오버로딩, *오버라이딩)
퍼블릭 클레스는 고유한 클레스 (1개만 만들수 있음)
접근지정자를 private로 선언하면
외부 클래스에서 호출 시 해당 메소드를 호출할 수 없다.

DW코딩 규칙
 변수생성
 1.메소드에 리턴값이 있으면 우선 변수로 받는다.
 2.선언한 변수가 행동이 일어나서 결과값이 생길 떄.
 3.함수가 어려우면 메인함수에 코딩
 ex) int x= 10; int y=10;
     int sum = x + y;//sum으로 데이터를 받는다.
 4.지역 변수에서만 활용할 건지 전역변수로 활용할 건지 고민.
  ###메소드 분리하는 방법
 1.함수가 어려우면 메인함수에 코딩
 2.메인함수로 결과가 나오면 함수로 분리할 것
 3. 고민 또 고민!


